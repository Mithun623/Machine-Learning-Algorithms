{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"homeprices","provenance":[],"collapsed_sections":[],"mount_file_id":"1fwLxYTtl5LpiVikaiUcVUnl6ERKR5k0t","authorship_tag":"ABX9TyOPEMIlRD4SZ/sUYV4nRWfN"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":16,"metadata":{"id":"aKjfI-8kkVwY","executionInfo":{"status":"ok","timestamp":1657788985799,"user_tz":-330,"elapsed":884,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn import linear_model\n","import pandas as pd\n","import seaborn as sns"]},{"cell_type":"code","source":["df=pd.read_csv('/content/drive/MyDrive/Dataset/homeprices.csv')"],"metadata":{"id":"1cdQKgcYkgJ2","executionInfo":{"status":"ok","timestamp":1657788985803,"user_tz":-330,"elapsed":44,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"3qswgilAkgTe","executionInfo":{"status":"ok","timestamp":1657788985804,"user_tz":-330,"elapsed":41,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"6b3943d2-c571-4dfe-bfdc-144cdf430a3a"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               town  area   price\n","0   monroe township  2600  550000\n","1   monroe township  3000  565000\n","2   monroe township  3200  610000\n","3   monroe township  3600  680000\n","4   monroe township  4000  725000\n","5      west windsor  2600  585000\n","6      west windsor  2800  615000\n","7      west windsor  3300  650000\n","8      west windsor  3600  710000\n","9       robinsville  2600  575000\n","10      robinsville  2900  600000\n","11      robinsville  3100  620000\n","12      robinsville  3600  695000"],"text/html":["\n","  <div id=\"df-08e2bd0b-7bd7-488f-b6c7-681f86ac9d5c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>town</th>\n","      <th>area</th>\n","      <th>price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>monroe township</td>\n","      <td>2600</td>\n","      <td>550000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>monroe township</td>\n","      <td>3000</td>\n","      <td>565000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>monroe township</td>\n","      <td>3200</td>\n","      <td>610000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>monroe township</td>\n","      <td>3600</td>\n","      <td>680000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>monroe township</td>\n","      <td>4000</td>\n","      <td>725000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>west windsor</td>\n","      <td>2600</td>\n","      <td>585000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>west windsor</td>\n","      <td>2800</td>\n","      <td>615000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>west windsor</td>\n","      <td>3300</td>\n","      <td>650000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>west windsor</td>\n","      <td>3600</td>\n","      <td>710000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>robinsville</td>\n","      <td>2600</td>\n","      <td>575000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>robinsville</td>\n","      <td>2900</td>\n","      <td>600000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>robinsville</td>\n","      <td>3100</td>\n","      <td>620000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>robinsville</td>\n","      <td>3600</td>\n","      <td>695000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08e2bd0b-7bd7-488f-b6c7-681f86ac9d5c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-08e2bd0b-7bd7-488f-b6c7-681f86ac9d5c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-08e2bd0b-7bd7-488f-b6c7-681f86ac9d5c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kvvc1nqjtCPY","executionInfo":{"status":"ok","timestamp":1657788990164,"user_tz":-330,"elapsed":4393,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"f6b01b80-a1c5-4955-f243-f37654b610c7"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["%matplotlib inline\n","plt.xlabel('area')\n","plt.ylabel('price')\n","plt.scatter(df.area,df.price,color='red',marker='+')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"9_ueujaKkgZT","executionInfo":{"status":"ok","timestamp":1657788990184,"user_tz":-330,"elapsed":87,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"7b5a62cd-495e-46fe-b676-d29bad748a8f"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.collections.PathCollection at 0x7f9441681310>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["new_df=df.drop('price',axis='columns')\n","new_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"59ViCo0klUzQ","executionInfo":{"status":"ok","timestamp":1657788990186,"user_tz":-330,"elapsed":72,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"06b697aa-41eb-431f-a838-88ce84891543"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               town  area\n","0   monroe township  2600\n","1   monroe township  3000\n","2   monroe township  3200\n","3   monroe township  3600\n","4   monroe township  4000\n","5      west windsor  2600\n","6      west windsor  2800\n","7      west windsor  3300\n","8      west windsor  3600\n","9       robinsville  2600\n","10      robinsville  2900\n","11      robinsville  3100\n","12      robinsville  3600"],"text/html":["\n","  <div id=\"df-e5f8f322-08db-4cb0-99a2-09075ba70a76\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>town</th>\n","      <th>area</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>monroe township</td>\n","      <td>2600</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>monroe township</td>\n","      <td>3000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>monroe township</td>\n","      <td>3200</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>monroe township</td>\n","      <td>3600</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>monroe township</td>\n","      <td>4000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>west windsor</td>\n","      <td>2600</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>west windsor</td>\n","      <td>2800</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>west windsor</td>\n","      <td>3300</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>west windsor</td>\n","      <td>3600</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>robinsville</td>\n","      <td>2600</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>robinsville</td>\n","      <td>2900</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>robinsville</td>\n","      <td>3100</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>robinsville</td>\n","      <td>3600</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5f8f322-08db-4cb0-99a2-09075ba70a76')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5f8f322-08db-4cb0-99a2-09075ba70a76 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5f8f322-08db-4cb0-99a2-09075ba70a76');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["price=df.price\n","price"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b23bNZXFlUvx","executionInfo":{"status":"ok","timestamp":1657788990188,"user_tz":-330,"elapsed":69,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"7d5354cd-bc62-44cb-ed2e-034fbb626ebc"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     550000\n","1     565000\n","2     610000\n","3     680000\n","4     725000\n","5     585000\n","6     615000\n","7     650000\n","8     710000\n","9     575000\n","10    600000\n","11    620000\n","12    695000\n","Name: price, dtype: int64"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["reg = linear_model.LinearRegression()\n","reg.fit(new_df,price)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":328},"id":"x8gW7iMqlUsB","executionInfo":{"status":"error","timestamp":1657788990203,"user_tz":-330,"elapsed":76,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"25e2e0b1-90a3-4bb2-edf1-1db5e32c86bf"},"execution_count":23,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-23-ef523fb8ab2b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mreg\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlinear_model\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mLinearRegression\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mreg\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnew_df\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mprice\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/linear_model/_base.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, X, y, sample_weight)\u001b[0m\n\u001b[1;32m    661\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    662\u001b[0m         X, y = self._validate_data(\n\u001b[0;32m--> 663\u001b[0;31m             \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maccept_sparse\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0maccept_sparse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_numeric\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmulti_output\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    664\u001b[0m         )\n\u001b[1;32m    665\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py\u001b[0m in \u001b[0;36m_validate_data\u001b[0;34m(self, X, y, reset, validate_separately, **check_params)\u001b[0m\n\u001b[1;32m    579\u001b[0m                 \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_y_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    580\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 581\u001b[0;31m                 \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcheck_X_y\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mcheck_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    582\u001b[0m             \u001b[0mout\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mX\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    583\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_X_y\u001b[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)\u001b[0m\n\u001b[1;32m    974\u001b[0m         \u001b[0mensure_min_samples\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mensure_min_samples\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    975\u001b[0m         \u001b[0mensure_min_features\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mensure_min_features\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 976\u001b[0;31m         \u001b[0mestimator\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mestimator\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    977\u001b[0m     )\n\u001b[1;32m    978\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_array\u001b[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)\u001b[0m\n\u001b[1;32m    744\u001b[0m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcasting\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"unsafe\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    745\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 746\u001b[0;31m                     \u001b[0marray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0morder\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0morder\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    747\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mComplexWarning\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mcomplex_warning\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    748\u001b[0m                 raise ValueError(\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m__array__\u001b[0;34m(self, dtype)\u001b[0m\n\u001b[1;32m   1991\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1992\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__array__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mNpDtype\u001b[0m \u001b[0;34m|\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1993\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_values\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1994\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1995\u001b[0m     def __array_wrap__(\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'monroe township'"]}]},{"cell_type":"code","source":["reg.predict([[3300]])"],"metadata":{"id":"OIDHNyjylUn4","executionInfo":{"status":"aborted","timestamp":1657788990190,"user_tz":-330,"elapsed":60,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reg.coef_"],"metadata":{"id":"g-8RI6mkmfsU","executionInfo":{"status":"aborted","timestamp":1657788990191,"user_tz":-330,"elapsed":61,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reg.intercept_"],"metadata":{"id":"718T5-twmjOC","executionInfo":{"status":"aborted","timestamp":1657788990192,"user_tz":-330,"elapsed":62,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["reg.predict([[5000]])"],"metadata":{"id":"aUkTY_PDmnVj","executionInfo":{"status":"aborted","timestamp":1657788990194,"user_tz":-330,"elapsed":63,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["area_df=pd.read_csv('/content/drive/MyDrive/Dataset/areas.csv')\n","area_df.head(3)"],"metadata":{"id":"eIm6Py7Tm7JK","executionInfo":{"status":"aborted","timestamp":1657788990195,"user_tz":-330,"elapsed":64,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["p=reg.predict(area_df)\n","p"],"metadata":{"id":"rsLEjKSKm7Fx","executionInfo":{"status":"aborted","timestamp":1657788990198,"user_tz":-330,"elapsed":67,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"47anjGBJm7CZ","executionInfo":{"status":"aborted","timestamp":1657788990199,"user_tz":-330,"elapsed":68,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"mKVL9snXm685","executionInfo":{"status":"aborted","timestamp":1657788990200,"user_tz":-330,"elapsed":68,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":null,"outputs":[]}]}