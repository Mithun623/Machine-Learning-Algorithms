{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Social network ads","provenance":[],"collapsed_sections":[],"mount_file_id":"1-aV3afNfpAeZHYXjkgXk5zdD-nvTFnOX","authorship_tag":"ABX9TyN9rkI6qToMwuxR2vvQ+wN1"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"bgzRsyXSxt0I"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","import pandas as pd"]},{"cell_type":"code","source":["data = pd.read_csv(\"/content/drive/MyDrive/Dataset/SocialNetworkAds.csv\")"],"metadata":{"id":"efMiShlHyOVO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"f2vdubCqyOZY","executionInfo":{"status":"ok","timestamp":1657100812056,"user_tz":-330,"elapsed":53,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"d73c8733-7e1b-4646-adcf-705a5084cf5a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    User ID  Gender  Age  EstimatedSalary  Purchased\n","0  15624510    Male   19            19000          0\n","1  15810944    Male   35            20000          0\n","2  15668575  Female   26            43000          0\n","3  15603246  Female   27            57000          0\n","4  15804002    Male   19            76000          0"],"text/html":["\n","  <div id=\"df-4e1576dd-ccad-427b-ab85-8832fbd655aa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Gender</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","      <td>Male</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","      <td>Female</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15603246</td>\n","      <td>Female</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15804002</td>\n","      <td>Male</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e1576dd-ccad-427b-ab85-8832fbd655aa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4e1576dd-ccad-427b-ab85-8832fbd655aa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4e1576dd-ccad-427b-ab85-8832fbd655aa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.tail"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RrIt441eyOdc","executionInfo":{"status":"ok","timestamp":1657100812059,"user_tz":-330,"elapsed":50,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"beb0b9bf-e1df-4bc4-b80a-f0a3e2dfb097"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.tail of       User ID  Gender  Age  EstimatedSalary  Purchased\n","0    15624510    Male   19            19000          0\n","1    15810944    Male   35            20000          0\n","2    15668575  Female   26            43000          0\n","3    15603246  Female   27            57000          0\n","4    15804002    Male   19            76000          0\n","..        ...     ...  ...              ...        ...\n","395  15691863  Female   46            41000          1\n","396  15706071    Male   51            23000          1\n","397  15654296  Female   50            20000          1\n","398  15755018    Male   36            33000          0\n","399  15594041  Female   49            36000          1\n","\n","[400 rows x 5 columns]>"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rOB7MYIlyOhF","executionInfo":{"status":"ok","timestamp":1657100812060,"user_tz":-330,"elapsed":36,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"d11328c2-922d-4c1d-8a1e-3df90fd5975c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(400, 5)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o5UVMLozyOkP","executionInfo":{"status":"ok","timestamp":1657100812063,"user_tz":-330,"elapsed":30,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"4c13eeee-14c1-4b27-eae7-f223c277edfd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 400 entries, 0 to 399\n","Data columns (total 5 columns):\n"," #   Column           Non-Null Count  Dtype \n","---  ------           --------------  ----- \n"," 0   User ID          400 non-null    int64 \n"," 1   Gender           400 non-null    object\n"," 2   Age              400 non-null    int64 \n"," 3   EstimatedSalary  400 non-null    int64 \n"," 4   Purchased        400 non-null    int64 \n","dtypes: int64(4), object(1)\n","memory usage: 15.8+ KB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"J5IMZiaMyOni","executionInfo":{"status":"ok","timestamp":1657100812597,"user_tz":-330,"elapsed":42,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"3b5b2359-40ee-4913-d0bc-21540db9532c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User ID         Age  EstimatedSalary   Purchased\n","count  4.000000e+02  400.000000       400.000000  400.000000\n","mean   1.569154e+07   37.655000     69742.500000    0.357500\n","std    7.165832e+04   10.482877     34096.960282    0.479864\n","min    1.556669e+07   18.000000     15000.000000    0.000000\n","25%    1.562676e+07   29.750000     43000.000000    0.000000\n","50%    1.569434e+07   37.000000     70000.000000    0.000000\n","75%    1.575036e+07   46.000000     88000.000000    1.000000\n","max    1.581524e+07   60.000000    150000.000000    1.000000"],"text/html":["\n","  <div id=\"df-b89c598c-1357-4c80-b622-9191ddb10a45\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000e+02</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.569154e+07</td>\n","      <td>37.655000</td>\n","      <td>69742.500000</td>\n","      <td>0.357500</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.165832e+04</td>\n","      <td>10.482877</td>\n","      <td>34096.960282</td>\n","      <td>0.479864</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.556669e+07</td>\n","      <td>18.000000</td>\n","      <td>15000.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.562676e+07</td>\n","      <td>29.750000</td>\n","      <td>43000.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.569434e+07</td>\n","      <td>37.000000</td>\n","      <td>70000.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.575036e+07</td>\n","      <td>46.000000</td>\n","      <td>88000.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.581524e+07</td>\n","      <td>60.000000</td>\n","      <td>150000.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b89c598c-1357-4c80-b622-9191ddb10a45')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b89c598c-1357-4c80-b622-9191ddb10a45 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b89c598c-1357-4c80-b622-9191ddb10a45');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-reZ7lo8yOrY","executionInfo":{"status":"ok","timestamp":1657100812600,"user_tz":-330,"elapsed":40,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"4c8dfe25-f29b-4187-926d-d9e231605800"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["User ID            0\n","Gender             0\n","Age                0\n","EstimatedSalary    0\n","Purchased          0\n","dtype: int64"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data.duplicated().sum()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q5dzN5kezL5k","executionInfo":{"status":"ok","timestamp":1657100812601,"user_tz":-330,"elapsed":35,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"7a7fdd2d-ccf7-4d06-f1e1-fbb339276b22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["data=pd.get_dummies(data)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mv54vbxazL09","executionInfo":{"status":"ok","timestamp":1657100812603,"user_tz":-330,"elapsed":31,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"f11739e0-eef2-497d-ac97-012193efcd89"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    User ID  Age  EstimatedSalary  Purchased  Gender_Female  Gender_Male\n","0  15624510   19            19000          0              0            1\n","1  15810944   35            20000          0              0            1\n","2  15668575   26            43000          0              1            0\n","3  15603246   27            57000          0              1            0\n","4  15804002   19            76000          0              0            1"],"text/html":["\n","  <div id=\"df-d86999d7-3eb7-4a88-a9fe-0c2941341da6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Purchased</th>\n","      <th>Gender_Female</th>\n","      <th>Gender_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>15624510</td>\n","      <td>19</td>\n","      <td>19000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15810944</td>\n","      <td>35</td>\n","      <td>20000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>15668575</td>\n","      <td>26</td>\n","      <td>43000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>15603246</td>\n","      <td>27</td>\n","      <td>57000</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>15804002</td>\n","      <td>19</td>\n","      <td>76000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d86999d7-3eb7-4a88-a9fe-0c2941341da6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d86999d7-3eb7-4a88-a9fe-0c2941341da6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d86999d7-3eb7-4a88-a9fe-0c2941341da6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["x = data[['Gender_Female','Gender_Male','Age','EstimatedSalary']]\n","y = data['Purchased']"],"metadata":{"id":"x8zpVs8szLxI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=42,test_size=0.2)"],"metadata":{"id":"KTdIGf78zLtU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr=LogisticRegression()\n","model=lr.fit(x_train,y_train)\n","prediction=model.predict(x_test)"],"metadata":{"id":"6wYwlf00zLmt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","print('MSE/IS:',mean_squared_error(y_test,prediction))"],"metadata":{"id":"kDIZGO3n01FU","executionInfo":{"status":"ok","timestamp":1657101049105,"user_tz":-330,"elapsed":388,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"32ee126f-f6b3-45e5-8894-76866b97e215"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE/IS: 0.1125\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import r2_score\n","print('R squared value is:',r2_score(y_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YYh3KFCq01Dc","executionInfo":{"status":"ok","timestamp":1657101087926,"user_tz":-330,"elapsed":416,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"ac0543b8-fcff-4961-bf23-2b6281959def"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R squared value is: 0.5054945054945056\n"]}]},{"cell_type":"code","source":["x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"4DL8DT8l5u0i","executionInfo":{"status":"ok","timestamp":1657100813513,"user_tz":-330,"elapsed":36,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"e5850c1c-2526-47c9-a6cd-90dca03cc13b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Gender_Female  Gender_Male         Age  EstimatedSalary\n","count     400.000000   400.000000  400.000000       400.000000\n","mean        0.510000     0.490000   37.655000     69742.500000\n","std         0.500526     0.500526   10.482877     34096.960282\n","min         0.000000     0.000000   18.000000     15000.000000\n","25%         0.000000     0.000000   29.750000     43000.000000\n","50%         1.000000     0.000000   37.000000     70000.000000\n","75%         1.000000     1.000000   46.000000     88000.000000\n","max         1.000000     1.000000   60.000000    150000.000000"],"text/html":["\n","  <div id=\"df-ce9da478-6b26-476f-91bd-54d9a62d439f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Gender_Female</th>\n","      <th>Gender_Male</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.510000</td>\n","      <td>0.490000</td>\n","      <td>37.655000</td>\n","      <td>69742.500000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.500526</td>\n","      <td>0.500526</td>\n","      <td>10.482877</td>\n","      <td>34096.960282</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>18.000000</td>\n","      <td>15000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>29.750000</td>\n","      <td>43000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>37.000000</td>\n","      <td>70000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>46.000000</td>\n","      <td>88000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>60.000000</td>\n","      <td>150000.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ce9da478-6b26-476f-91bd-54d9a62d439f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ce9da478-6b26-476f-91bd-54d9a62d439f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ce9da478-6b26-476f-91bd-54d9a62d439f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["type(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZLzdwcIp5_44","executionInfo":{"status":"ok","timestamp":1657100845795,"user_tz":-330,"elapsed":621,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"6655d888-a7b3-4074-d54d-93f194908c01"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["from sklearn import preprocessing\n","standards=preprocessing.StandardScaler()\n","x=standards.fit_transform(x)"],"metadata":{"id":"keHu9o196G-h"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=pd.DataFrame(x)\n","x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"o7wmO3Lx6KEp","executionInfo":{"status":"ok","timestamp":1657100873268,"user_tz":-330,"elapsed":509,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"e1468367-b72c-4de5-975b-8b0e2ab9adad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  0             1             2             3\n","count  4.000000e+02  4.000000e+02  4.000000e+02  4.000000e+02\n","mean  -8.881784e-18  8.881784e-18 -7.105427e-17 -1.776357e-17\n","std    1.001252e+00  1.001252e+00  1.001252e+00  1.001252e+00\n","min   -1.020204e+00 -9.801961e-01 -1.877311e+00 -1.607506e+00\n","25%   -1.020204e+00 -9.801961e-01 -7.550313e-01 -7.852897e-01\n","50%    9.801961e-01 -9.801961e-01 -6.256110e-02  7.561451e-03\n","75%    9.801961e-01  1.020204e+00  7.970571e-01  5.361289e-01\n","max    9.801961e-01  1.020204e+00  2.134241e+00  2.356750e+00"],"text/html":["\n","  <div id=\"df-99471fea-9291-4536-b439-d09d6416e421\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000e+02</td>\n","      <td>4.000000e+02</td>\n","      <td>4.000000e+02</td>\n","      <td>4.000000e+02</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-8.881784e-18</td>\n","      <td>8.881784e-18</td>\n","      <td>-7.105427e-17</td>\n","      <td>-1.776357e-17</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.001252e+00</td>\n","      <td>1.001252e+00</td>\n","      <td>1.001252e+00</td>\n","      <td>1.001252e+00</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-1.020204e+00</td>\n","      <td>-9.801961e-01</td>\n","      <td>-1.877311e+00</td>\n","      <td>-1.607506e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-1.020204e+00</td>\n","      <td>-9.801961e-01</td>\n","      <td>-7.550313e-01</td>\n","      <td>-7.852897e-01</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>9.801961e-01</td>\n","      <td>-9.801961e-01</td>\n","      <td>-6.256110e-02</td>\n","      <td>7.561451e-03</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>9.801961e-01</td>\n","      <td>1.020204e+00</td>\n","      <td>7.970571e-01</td>\n","      <td>5.361289e-01</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.801961e-01</td>\n","      <td>1.020204e+00</td>\n","      <td>2.134241e+00</td>\n","      <td>2.356750e+00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99471fea-9291-4536-b439-d09d6416e421')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-99471fea-9291-4536-b439-d09d6416e421 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-99471fea-9291-4536-b439-d09d6416e421');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","lr=LogisticRegression()\n","model=lr.fit(x_train,y_train)\n","prediction=model.predict(x_test)\n","x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)\n","print('MSE IS:',mean_squared_error(y_test,prediction))\n","print('R squared value is:',r2_score(y_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6-2xc99S6O2H","executionInfo":{"status":"ok","timestamp":1657101113251,"user_tz":-330,"elapsed":11,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"be3850d8-da08-46a2-9df4-dc227cfb00f4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE IS: 0.1125\n","R squared value is: 0.5054945054945056\n"]}]},{"cell_type":"code","source":["x=data.drop('Purchased',axis=1)\n","x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"mOwUhIOl7KE1","executionInfo":{"status":"ok","timestamp":1657101143836,"user_tz":-330,"elapsed":497,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"40843223-9941-4982-b1a1-2c3a565c9e87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User ID         Age  EstimatedSalary  Gender_Female  Gender_Male\n","count  4.000000e+02  400.000000       400.000000     400.000000   400.000000\n","mean   1.569154e+07   37.655000     69742.500000       0.510000     0.490000\n","std    7.165832e+04   10.482877     34096.960282       0.500526     0.500526\n","min    1.556669e+07   18.000000     15000.000000       0.000000     0.000000\n","25%    1.562676e+07   29.750000     43000.000000       0.000000     0.000000\n","50%    1.569434e+07   37.000000     70000.000000       1.000000     0.000000\n","75%    1.575036e+07   46.000000     88000.000000       1.000000     1.000000\n","max    1.581524e+07   60.000000    150000.000000       1.000000     1.000000"],"text/html":["\n","  <div id=\"df-68e1e2a1-e135-4ed0-9b43-414a6ff1c35f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Gender_Female</th>\n","      <th>Gender_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000e+02</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.569154e+07</td>\n","      <td>37.655000</td>\n","      <td>69742.500000</td>\n","      <td>0.510000</td>\n","      <td>0.490000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.165832e+04</td>\n","      <td>10.482877</td>\n","      <td>34096.960282</td>\n","      <td>0.500526</td>\n","      <td>0.500526</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.556669e+07</td>\n","      <td>18.000000</td>\n","      <td>15000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.562676e+07</td>\n","      <td>29.750000</td>\n","      <td>43000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.569434e+07</td>\n","      <td>37.000000</td>\n","      <td>70000.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.575036e+07</td>\n","      <td>46.000000</td>\n","      <td>88000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.581524e+07</td>\n","      <td>60.000000</td>\n","      <td>150000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68e1e2a1-e135-4ed0-9b43-414a6ff1c35f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-68e1e2a1-e135-4ed0-9b43-414a6ff1c35f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-68e1e2a1-e135-4ed0-9b43-414a6ff1c35f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["min_max=preprocessing.MinMaxScaler(feature_range=(0,1))\n","x=min_max.fit_transform(x)\n","x=pd.DataFrame(x)\n","x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"3sfVvOM07R5l","executionInfo":{"status":"ok","timestamp":1657101173469,"user_tz":-330,"elapsed":415,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"f9e7b82c-9853-4691-bdb7-30e7c0ea5129"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                0           1           2           3           4\n","count  400.000000  400.000000  400.000000  400.000000  400.000000\n","mean     0.502323    0.467976    0.405500    0.510000    0.490000\n","std      0.288309    0.249592    0.252570    0.500526    0.500526\n","min      0.000000    0.000000    0.000000    0.000000    0.000000\n","25%      0.241704    0.279762    0.207407    0.000000    0.000000\n","50%      0.513595    0.452381    0.407407    1.000000    0.000000\n","75%      0.738991    0.666667    0.540741    1.000000    1.000000\n","max      1.000000    1.000000    1.000000    1.000000    1.000000"],"text/html":["\n","  <div id=\"df-cd761e76-8a5b-4982-b397-9c4a23911b54\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.502323</td>\n","      <td>0.467976</td>\n","      <td>0.405500</td>\n","      <td>0.510000</td>\n","      <td>0.490000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.288309</td>\n","      <td>0.249592</td>\n","      <td>0.252570</td>\n","      <td>0.500526</td>\n","      <td>0.500526</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.241704</td>\n","      <td>0.279762</td>\n","      <td>0.207407</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.513595</td>\n","      <td>0.452381</td>\n","      <td>0.407407</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.738991</td>\n","      <td>0.666667</td>\n","      <td>0.540741</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd761e76-8a5b-4982-b397-9c4a23911b54')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cd761e76-8a5b-4982-b397-9c4a23911b54 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cd761e76-8a5b-4982-b397-9c4a23911b54');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)\n","lr=LogisticRegression()\n","model=lr.fit(x_train,y_train)\n","prediction=model.predict(x_test)\n","print('MSE IS:',mean_squared_error(y_test,prediction))\n","print('R squared value is:',r2_score(y_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xRljmYnR7Xj7","executionInfo":{"status":"ok","timestamp":1657101191984,"user_tz":-330,"elapsed":409,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"bd468b92-3f80-4156-fc41-7bf78868551b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE IS: 0.125\n","R squared value is: 0.4505494505494506\n"]}]},{"cell_type":"code","source":["x=data.drop('Purchased',axis=1)\n","x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"GdrpZri67gZ8","executionInfo":{"status":"ok","timestamp":1657101243676,"user_tz":-330,"elapsed":632,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"12187cdd-1bcd-4d92-8e47-601c7e65739c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User ID         Age  EstimatedSalary  Gender_Female  Gender_Male\n","count  4.000000e+02  400.000000       400.000000     400.000000   400.000000\n","mean   1.569154e+07   37.655000     69742.500000       0.510000     0.490000\n","std    7.165832e+04   10.482877     34096.960282       0.500526     0.500526\n","min    1.556669e+07   18.000000     15000.000000       0.000000     0.000000\n","25%    1.562676e+07   29.750000     43000.000000       0.000000     0.000000\n","50%    1.569434e+07   37.000000     70000.000000       1.000000     0.000000\n","75%    1.575036e+07   46.000000     88000.000000       1.000000     1.000000\n","max    1.581524e+07   60.000000    150000.000000       1.000000     1.000000"],"text/html":["\n","  <div id=\"df-e8bf49fb-5880-426b-beb0-b45ab474b6ac\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Gender_Female</th>\n","      <th>Gender_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000e+02</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.569154e+07</td>\n","      <td>37.655000</td>\n","      <td>69742.500000</td>\n","      <td>0.510000</td>\n","      <td>0.490000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.165832e+04</td>\n","      <td>10.482877</td>\n","      <td>34096.960282</td>\n","      <td>0.500526</td>\n","      <td>0.500526</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.556669e+07</td>\n","      <td>18.000000</td>\n","      <td>15000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.562676e+07</td>\n","      <td>29.750000</td>\n","      <td>43000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.569434e+07</td>\n","      <td>37.000000</td>\n","      <td>70000.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.575036e+07</td>\n","      <td>46.000000</td>\n","      <td>88000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.581524e+07</td>\n","      <td>60.000000</td>\n","      <td>150000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e8bf49fb-5880-426b-beb0-b45ab474b6ac')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e8bf49fb-5880-426b-beb0-b45ab474b6ac button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e8bf49fb-5880-426b-beb0-b45ab474b6ac');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["x=pd.DataFrame(x)\n","x.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"bKEtiP1f7mox","executionInfo":{"status":"ok","timestamp":1657101258905,"user_tz":-330,"elapsed":427,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"edb99052-4d00-4924-fcc4-3becb67b8a85"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            User ID         Age  EstimatedSalary  Gender_Female  Gender_Male\n","count  4.000000e+02  400.000000       400.000000     400.000000   400.000000\n","mean   1.569154e+07   37.655000     69742.500000       0.510000     0.490000\n","std    7.165832e+04   10.482877     34096.960282       0.500526     0.500526\n","min    1.556669e+07   18.000000     15000.000000       0.000000     0.000000\n","25%    1.562676e+07   29.750000     43000.000000       0.000000     0.000000\n","50%    1.569434e+07   37.000000     70000.000000       1.000000     0.000000\n","75%    1.575036e+07   46.000000     88000.000000       1.000000     1.000000\n","max    1.581524e+07   60.000000    150000.000000       1.000000     1.000000"],"text/html":["\n","  <div id=\"df-539974c2-4196-4166-935e-99a412621613\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>User ID</th>\n","      <th>Age</th>\n","      <th>EstimatedSalary</th>\n","      <th>Gender_Female</th>\n","      <th>Gender_Male</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>4.000000e+02</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.569154e+07</td>\n","      <td>37.655000</td>\n","      <td>69742.500000</td>\n","      <td>0.510000</td>\n","      <td>0.490000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>7.165832e+04</td>\n","      <td>10.482877</td>\n","      <td>34096.960282</td>\n","      <td>0.500526</td>\n","      <td>0.500526</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.556669e+07</td>\n","      <td>18.000000</td>\n","      <td>15000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.562676e+07</td>\n","      <td>29.750000</td>\n","      <td>43000.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.569434e+07</td>\n","      <td>37.000000</td>\n","      <td>70000.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1.575036e+07</td>\n","      <td>46.000000</td>\n","      <td>88000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.581524e+07</td>\n","      <td>60.000000</td>\n","      <td>150000.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-539974c2-4196-4166-935e-99a412621613')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-539974c2-4196-4166-935e-99a412621613 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-539974c2-4196-4166-935e-99a412621613');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)\n","lr=LogisticRegression()"],"metadata":{"id":"zPVEkIo37mk0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)\n","lr=LogisticRegression()\n","model=lr.fit(x_train,y_train)\n","prediction=model.predict(x_test)\n","print('MSE IS:',mean_squared_error(y_test,prediction))\n","print('R squared value is:',r2_score(y_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ePuXLVeK7mej","executionInfo":{"status":"ok","timestamp":1657101296989,"user_tz":-330,"elapsed":16,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"cb4e93f4-562d-4e8d-947b-c48a6eb1992b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE IS: 0.2625\n","R squared value is: -0.15384615384615374\n"]}]},{"cell_type":"code","source":["corrmatrix=data.corr()\n","plt.subplots(figsize=(20,8))\n","sns.heatmap(corrmatrix,vmin=0.4,vmax=0.9,annot=True,linewidths=0.2,cmap='YlGnBu')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":506},"id":"HbE0X4TP7mHq","executionInfo":{"status":"ok","timestamp":1657101315184,"user_tz":-330,"elapsed":1593,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"3d868167-6096-4652-f88b-f369eefca757"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe15957c710>"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GOb215N48BIx","executionInfo":{"status":"ok","timestamp":1657101370382,"user_tz":-330,"elapsed":375,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"8734a611-5906-447f-ee79-f2150d7db384"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['User ID', 'Age', 'EstimatedSalary', 'Purchased', 'Gender_Female',\n","       'Gender_Male'],\n","      dtype='object')"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["data.drop(['Age','EstimatedSalary'],axis=1,inplace=True)"],"metadata":{"id":"gK9n-DIQ8J86"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y=data['Purchased']\n","x=data.drop('Purchased',axis=1)\n","x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.2)\n","lr=LogisticRegression()\n","model=lr.fit(x_train,y_train)\n","prediction=model.predict(x_test)\n","print('MSE IS:',mean_squared_error(y_test,prediction))\n","print('R squared value is:',r2_score(y_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_lfACdiB8Vzg","executionInfo":{"status":"ok","timestamp":1657101467005,"user_tz":-330,"elapsed":421,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"caf27ccc-c852-4ea1-87c7-961a5e393aab"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE IS: 0.35\n","R squared value is: -0.5384615384615383\n"]}]}]}