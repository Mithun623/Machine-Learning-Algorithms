{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Carprice2","provenance":[],"collapsed_sections":[],"mount_file_id":"1qRQUp4r8XUCVmsKKj_nUhFAGwI6N3r_T","authorship_tag":"ABX9TyPDiCQ3mJDctCL97MWKJ94D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"dcv9V2TjeiLy","executionInfo":{"status":"ok","timestamp":1656137356773,"user_tz":-330,"elapsed":541,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["data=pd.read_csv('/content/drive/MyDrive/Dataset/carmode.csv')"],"metadata":{"id":"JQA8cUVZepTu","executionInfo":{"status":"ok","timestamp":1656137428858,"user_tz":-330,"elapsed":396,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"bbkmpUzDepoP","executionInfo":{"status":"ok","timestamp":1656137440561,"user_tz":-330,"elapsed":399,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"05808824-886d-42fe-b800-8f2317d4bbd1"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Car Model  Mileage  Sell Price($)  Age(yrs)\n","0    BMW X5    69000          18000         6\n","1    BMW X5    35000          34000         3\n","2    BMW X5    57000          26100         5\n","3    BMW X5    22500          40000         2\n","4    BMW X5    46000          31500         4"],"text/html":["\n","  <div id=\"df-70861f21-9352-4b83-94c9-3da77ee183d4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Car Model</th>\n","      <th>Mileage</th>\n","      <th>Sell Price($)</th>\n","      <th>Age(yrs)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>BMW X5</td>\n","      <td>69000</td>\n","      <td>18000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>BMW X5</td>\n","      <td>35000</td>\n","      <td>34000</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>BMW X5</td>\n","      <td>57000</td>\n","      <td>26100</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BMW X5</td>\n","      <td>22500</td>\n","      <td>40000</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BMW X5</td>\n","      <td>46000</td>\n","      <td>31500</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70861f21-9352-4b83-94c9-3da77ee183d4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-70861f21-9352-4b83-94c9-3da77ee183d4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-70861f21-9352-4b83-94c9-3da77ee183d4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["corrmatrix=data.corr()\n","plt.subplots(figsize=(10,4))\n","sns.heatmap(corrmatrix,vmin=-2,vmax=1,annot=True,linewidth=0.2,cmap='YlGnBu')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":286},"id":"zjJhMtwueptI","executionInfo":{"status":"ok","timestamp":1656137466901,"user_tz":-330,"elapsed":1265,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"f5d1b47e-b196-4a9b-bb81-19fe98d13544"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7ff46420db10>"]},"metadata":{},"execution_count":4},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["y=data['Age(yrs)']\n","x=data.drop(['Car Model'], axis=1)"],"metadata":{"id":"KOeNAUmeep0W","executionInfo":{"status":"ok","timestamp":1656137655785,"user_tz":-330,"elapsed":410,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=42,test_size=0.25)"],"metadata":{"id":"IeON1Dy1ep5b","executionInfo":{"status":"ok","timestamp":1656137658322,"user_tz":-330,"elapsed":370,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["x_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"SIg43cMNff-o","executionInfo":{"status":"ok","timestamp":1656137659987,"user_tz":-330,"elapsed":404,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"236356be-7b2f-4155-d3d6-09a3560c2826"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Mileage  Sell Price($)  Age(yrs)\n","11    79000          21000         7\n","9     67000          22000         6\n","0     69000          18000         6\n","8     91000          12000         8"],"text/html":["\n","  <div id=\"df-ca1d2d60-f887-4748-93b1-cdb9fe7affdb\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Mileage</th>\n","      <th>Sell Price($)</th>\n","      <th>Age(yrs)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11</th>\n","      <td>79000</td>\n","      <td>21000</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>67000</td>\n","      <td>22000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>69000</td>\n","      <td>18000</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>91000</td>\n","      <td>12000</td>\n","      <td>8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ca1d2d60-f887-4748-93b1-cdb9fe7affdb')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ca1d2d60-f887-4748-93b1-cdb9fe7affdb button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ca1d2d60-f887-4748-93b1-cdb9fe7affdb');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mMqyglnWfgCd","executionInfo":{"status":"ok","timestamp":1656137684700,"user_tz":-330,"elapsed":24,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"bd52c200-72c5-415b-ea48-ba883cbce96e"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11    7\n","9     6\n","0     6\n","8     8\n","Name: Age(yrs), dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["from sklearn import linear_model\n","lr=linear_model.LinearRegression()\n","model=lr.fit(x_train,y_train)"],"metadata":{"id":"HGhPKqB6fgGi","executionInfo":{"status":"ok","timestamp":1656137709585,"user_tz":-330,"elapsed":358,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["predictions=model.predict(x_test)\n","predictions"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kKsb0Vn-fgJ7","executionInfo":{"status":"ok","timestamp":1656137732817,"user_tz":-330,"elapsed":507,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"bbfb01e4-3be5-4aa6-a221-bc85e071ece9"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7., 6., 6., 8.])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["print(y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j-do7hY_fgN3","executionInfo":{"status":"ok","timestamp":1656137751628,"user_tz":-330,"elapsed":390,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"7ee68d43-b54d-48c9-8117-71f770e9c53b"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["11    7\n","9     6\n","0     6\n","8     8\n","Name: Age(yrs), dtype: int64\n"]}]},{"cell_type":"code","source":["print(predictions)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1J95KxutgMZp","executionInfo":{"status":"ok","timestamp":1656137766893,"user_tz":-330,"elapsed":402,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"46dbdc8f-e53f-48e5-f849-9effc2c01973"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["[7. 6. 6. 8.]\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","print('MSC is:',mean_squared_error(y_test,predictions))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C-qEB1yegMgK","executionInfo":{"status":"ok","timestamp":1656137788021,"user_tz":-330,"elapsed":397,"user":{"displayName":"Mithun Nath","userId":"01093248108661847497"}},"outputId":"5a4bfb9c-d904-4635-a39e-33f97ccc9c69"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["MSC is: 5.9164567891575885e-31\n"]}]}]}